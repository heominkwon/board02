<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee 
        http://www.springframework.org/schema/jee/spring-jee.xsd">

  <!-- @Component, @Repository, @Service, @Controller 가 붙은
  	 클래스를 검색하라는 선언  spms패키지 아래
  	 @Autowired, @Value, @Inject...모두 자동으로 선언
   -->
  <context:component-scan base-package="spms">
    <context:exclude-filter type="regex" expression="spms.controls.*"/>
  </context:component-scan>

 <!-- 
 	톰켓서버의 context.xml     
 	<Resource name="jdbc/myconn" auth="Container" type="javax.sql.DataSource"
 	web.xml에 
 	 <resource-ref>
      <res-ref-name>jdbc/myconn</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
  </resource-ref>
  -->
  <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/myconn"/>
  
  <bean id="transactionManager" 
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
  
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="typeAliasesPackage" value="spms.vo" />
    <property name="mapperLocations" value="classpath*:spms/dao/*Dao.xml" />
  </bean>

</beans>